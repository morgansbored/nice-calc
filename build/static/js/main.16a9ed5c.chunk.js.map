{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","logic/calculate.js","logic/isNumber.js","component/App.js","index.js"],"names":["Display","className","this","props","value","React","Component","Button","handleClick","clickHandler","name","orange","brown","wide","join","trim","onClick","ButtonPanel","buttonName","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","calculate","obj","total","next","test","result","includes","parseFloat","App","state","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16a9ed5c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Display.css\";\n\nexport default class Display extends React.Component {\n    static propTypes = {\n        value: PropTypes.string,\n    };\n\n    render() {\n        return (\n            <div className=\"component-display\">\n                <div>{this.props.value}</div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"./Button.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class Button extends React.Component {\n    static propTypes = {\n        name: PropTypes.string,\n        orange: PropTypes.bool,\n        brown: PropTypes.bool,\n        wide: PropTypes.bool,\n        clickHandler: PropTypes.func,\n    };\n\n    handleClick = () => {\n        this.props.clickHandler(this.props.name);\n    };\n\n    render() {\n        const className = [\n            \"component-button\",\n            this.props.orange ? \"orange\" : \"\",\n            this.props.brown ? \"brown\" : \"\",\n            this.props.wide ? \"wide\" : \"\",\n        ];\n\n        return (\n            <div className={className.join(\" \").trim()}>\n                <button onClick={this.handleClick}>{this.props.name}</button>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport Button from \"./Button\";\nimport \"./ButtonPanel.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class ButtonPanel extends React.Component {\n    static propTypes = {\n        clickHandler: PropTypes.func,\n    };\n\n    handleClick = buttonName => {\n        this.props.clickHandler(buttonName);\n    }\n\n    render() {\n        return (\n            <div className=\"component-button-panel\">\n                <div>\n                    <Button name=\"AC\" clickHandler={this.handleClick} brown />\n                    <Button name=\"+/-\" clickHandler={this.handleClick} brown />\n                    <Button name=\"%\" clickHandler={this.handleClick} brown />\n                    <Button name=\"รท\" clickHandler={this.handleClick} brown />\n                </div>\n                <div>\n                    <Button name=\"7\" clickHandler={this.handleClick} />\n                    <Button name=\"8\" clickHandler={this.handleClick} />\n                    <Button name=\"9\" clickHandler={this.handleClick} />\n                    <Button name=\"x\" clickHandler={this.handleClick} brown />\n                </div>\n                <div>\n                    <Button name=\"4\" clickHandler={this.handleClick} />\n                    <Button name=\"5\" clickHandler={this.handleClick} />\n                    <Button name=\"6\" clickHandler={this.handleClick} />\n                    <Button name=\"-\" clickHandler={this.handleClick} brown />\n                </div>\n                <div>\n                    <Button name=\"1\" clickHandler={this.handleClick} />\n                    <Button name=\"2\" clickHandler={this.handleClick} />\n                    <Button name=\"3\" clickHandler={this.handleClick} />\n                    <Button name=\"+\" clickHandler={this.handleClick} brown />\n                </div>\n                <div>\n                    <Button name=\"0\" clickHandler={this.handleClick} wide />\n                    <Button name=\".\" clickHandler={this.handleClick} />\n                    <Button name=\"=\" clickHandler={this.handleClick} orange />\n                </div>\n            </div>\n        );\n    }\n}","import Big from \"big.js\";\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"รท\" || operation === 'x' ? \"1\": \"0\")); //If dividing or multiplying, then 1 maintains current value in cases of null\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n  if (operation === \"รท\") {\n    if (two === \"0\") {\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    } else {\n      return one.div(two).toString();\n    }\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big(\"100\"))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next)\n          .div(Big(\"100\"))\n          .toString(),\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","export default function isNumber(item) {\n    return /[0-9]+/.test(item);\n  }","import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport './App.css';\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n  };\n\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}